window.jest_html_reporters_callback__({"numFailedTestSuites":33,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":33,"numTodoTests":0,"numTotalTestSuites":33,"numTotalTests":0,"startTime":1758566437931,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\collaboration.integration.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\collaboration.integration.test.ts: Missing semicolon. (14:18)\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m describe(\u001b[32m'Collaboration Integration Tests'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mlet\u001b[39m user1Service\u001b[33m:\u001b[39m \u001b[33mStateSynchronizationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m user2Service\u001b[33m:\u001b[39m \u001b[33mStateSynchronizationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m user1StateManager\u001b[33m:\u001b[39m \u001b[33mUnifiedStateManager\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m   \u001b[36mlet\u001b[39m user2StateManager\u001b[33m:\u001b[39m \u001b[33mUnifiedStateManager\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\components\\__tests__\\ViewerWorkflow.integration.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\components\\__tests__\\ViewerWorkflow.integration.test.tsx: Missing initializer in const declaration. (40:17)\n\n    \u001b[0m \u001b[90m 38 |\u001b[39m\n     \u001b[90m 39 |\u001b[39m \u001b[90m// Test wrapper component\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 40 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mTestWrapper\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m{ children\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m }\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ children }) \u001b[33m=>\u001b[39m (\n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 41 |\u001b[39m   \u001b[33m<\u001b[39m\u001b[33mThemeProvider\u001b[39m theme\u001b[33m=\u001b[39m{theme}\u001b[33m>\u001b[39m\n     \u001b[90m 42 |\u001b[39m     {children}\n     \u001b[90m 43 |\u001b[39m   \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mThemeProvider\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\crossBrowser.integration.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\crossBrowser.integration.test.ts: Unexpected reserved word 'interface'. (11:0)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[90m// Mock different browser environments\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBrowserEnvironment\u001b[39m {\n     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m   name\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m   userAgent\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m\n     \u001b[90m 14 |\u001b[39m   features\u001b[33m:\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.checkReservedWord (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2886:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifierName (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2848:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifier (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2805:23)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1299:27)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\performance.load.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\performance.load.test.ts: Missing semicolon. (27:20)\n\n    \u001b[0m \u001b[90m 25 |\u001b[39m\n     \u001b[90m 26 |\u001b[39m describe(\u001b[32m'Performance and Load Testing Suite'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m   \u001b[36mlet\u001b[39m memoryDetector\u001b[33m:\u001b[39m \u001b[33mReturnType\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m \u001b[33mPerformanceTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMemoryLeakDetector\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 30 |\u001b[39m     memoryDetector \u001b[33m=\u001b[39m \u001b[33mPerformanceTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMemoryLeakDetector(\u001b[35m25\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\performance.comprehensive.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\performance.comprehensive.test.ts: Missing semicolon. (16:20)\n\n    \u001b[0m \u001b[90m 14 |\u001b[39m\n     \u001b[90m 15 |\u001b[39m describe(\u001b[32m'Comprehensive Performance Testing Suite'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m advancedTester\u001b[33m:\u001b[39m \u001b[33mAdvancedLoadTester\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 17 |\u001b[39m\n     \u001b[90m 18 |\u001b[39m   beforeAll(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedLoadTester\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\stateSynchronizationService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\stateSynchronizationService.test.ts: Missing semicolon. (13:17)\n\n    \u001b[0m \u001b[90m 11 |\u001b[39m\n     \u001b[90m 12 |\u001b[39m describe(\u001b[32m'StateSynchronizationService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m   \u001b[36mlet\u001b[39m syncService\u001b[33m:\u001b[39m \u001b[33mStateSynchronizationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 14 |\u001b[39m   \u001b[36mlet\u001b[39m mockWebSocket\u001b[33m:\u001b[39m \u001b[33mWebSocket\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 15 |\u001b[39m\n     \u001b[90m 16 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\components\\ErrorHandling\\__tests__\\ErrorDisplay.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\components\\ErrorHandling\\__tests__\\ErrorDisplay.test.tsx: Missing initializer in const declaration. (14:15)\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mconst\u001b[39m theme \u001b[33m=\u001b[39m createTheme()\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[36mconst\u001b[39m mockError\u001b[33m:\u001b[39m \u001b[33mViewerError\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   name\u001b[33m:\u001b[39m \u001b[32m'ViewerError'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 16 |\u001b[39m   message\u001b[33m:\u001b[39m \u001b[32m'Test error message'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 17 |\u001b[39m   type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mNETWORK_ERROR\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedDicomService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedDicomService.test.ts: Missing initializer in const declaration. (38:15)\n\n    \u001b[0m \u001b[90m 36 |\u001b[39m global\u001b[33m.\u001b[39mfetch \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m \u001b[36mconst\u001b[39m mockStudy\u001b[33m:\u001b[39m \u001b[33mStudy\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 39 |\u001b[39m   id\u001b[33m:\u001b[39m \u001b[32m'test-study-1'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 40 |\u001b[39m   study_uid\u001b[33m:\u001b[39m \u001b[32m'test-study-uid-123'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 41 |\u001b[39m   patient_id\u001b[33m:\u001b[39m \u001b[32m'TEST_PATIENT_001'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\performance.task10.3.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\performance.task10.3.test.ts: Missing semicolon. (15:16)\n\n    \u001b[0m \u001b[90m 13 |\u001b[39m\n     \u001b[90m 14 |\u001b[39m describe(\u001b[32m'Task 10.3: Performance and Load Testing Implementation'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m loadTester\u001b[33m:\u001b[39m \u001b[33mLoadTester\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 16 |\u001b[39m\n     \u001b[90m 17 |\u001b[39m   beforeAll(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     loadTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mLoadTester\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\cinePlayerService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\cinePlayerService.test.ts: Missing semicolon. (14:17)\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m describe(\u001b[32m'CinePlayerService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mlet\u001b[39m cineService\u001b[33m:\u001b[39m \u001b[33mCinePlayerService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m mockCacheService\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[33mCacheIntegrationService\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m mockStudy\u001b[33m:\u001b[39m \u001b[33mStudy\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\hooks\\__tests__\\useIntelligentCache.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\hooks\\__tests__\\useIntelligentCache.test.tsx: Unexpected token (15:11)\n\n    \u001b[0m \u001b[90m 13 |\u001b[39m \u001b[90m// Mock Worker\u001b[39m\n     \u001b[90m 14 |\u001b[39m global\u001b[33m.\u001b[39m\u001b[33mWorker\u001b[39m \u001b[33m=\u001b[39m \u001b[36mclass\u001b[39m \u001b[33mMockWorker\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   onmessage\u001b[33m:\u001b[39m ((event\u001b[33m:\u001b[39m \u001b[33mMessageEvent\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m) \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 16 |\u001b[39m   postMessage()\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {}\n     \u001b[90m 17 |\u001b[39m   terminate()\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {}\n     \u001b[90m 18 |\u001b[39m   addEventListener()\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {}\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2115:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.parseClassBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClass (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1188:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:345:25)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\errorHandlingService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\errorHandlingService.test.ts: Unexpected token, expected \",\" (11:13)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m     it(\u001b[32m'should process network errors correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 10 |\u001b[39m       \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Network Error'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m       (error \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mtype \u001b[33m=\u001b[39m \u001b[32m'network'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m errorHandlingService\u001b[33m.\u001b[39mprocessError(error\u001b[33m,\u001b[39m {\n     \u001b[90m 14 |\u001b[39m         fileName\u001b[33m:\u001b[39m \u001b[32m'test.dcm'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.expect (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1789:14)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\performanceBenchmarks.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\performanceBenchmarks.test.ts: Missing semicolon. (24:20)\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m\n     \u001b[90m 23 |\u001b[39m describe(\u001b[32m'Performance Benchmarks'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mlet\u001b[39m memoryDetector\u001b[33m:\u001b[39m \u001b[33mReturnType\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m \u001b[33mPerformanceTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMemoryLeakDetector\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m\n     \u001b[90m 26 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 27 |\u001b[39m     memoryDetector \u001b[33m=\u001b[39m \u001b[33mPerformanceTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMemoryLeakDetector(\u001b[35m20\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\cacheIntegrationService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\cacheIntegrationService.test.ts: Unexpected token (14:11)\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m \u001b[90m// Mock Worker\u001b[39m\n     \u001b[90m 13 |\u001b[39m global\u001b[33m.\u001b[39m\u001b[33mWorker\u001b[39m \u001b[33m=\u001b[39m \u001b[36mclass\u001b[39m \u001b[33mMockWorker\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   onmessage\u001b[33m:\u001b[39m ((event\u001b[33m:\u001b[39m \u001b[33mMessageEvent\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m) \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   \n     \u001b[90m 16 |\u001b[39m   postMessage(message\u001b[33m:\u001b[39m any)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2115:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.parseClassBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClass (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1188:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:345:25)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\unifiedStateManager.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\unifiedStateManager.test.ts: Missing semicolon. (35:18)\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m describe(\u001b[32m'UnifiedStateManager'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m   \u001b[36mlet\u001b[39m stateManager\u001b[33m:\u001b[39m \u001b[33mUnifiedStateManager\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m   \u001b[36mlet\u001b[39m mockState\u001b[33m:\u001b[39m \u001b[33mGlobalState\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m\n     \u001b[90m 38 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\uploadProgressManager.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\uploadProgressManager.test.ts: Missing initializer in const declaration. (49:26)\n\n    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[36mawait\u001b[39m uploadProgressManager\u001b[33m.\u001b[39mtrackUpload(uploadId\u001b[33m,\u001b[39m \u001b[32m'test.dcm'\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1024\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 48 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 49 |\u001b[39m       \u001b[36mconst\u001b[39m progressUpdate\u001b[33m:\u001b[39m \u001b[33mProgressUpdate\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 50 |\u001b[39m         bytesUploaded\u001b[33m:\u001b[39m \u001b[35m512\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 51 |\u001b[39m         totalBytes\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 52 |\u001b[39m         stage\u001b[33m:\u001b[39m \u001b[32m'uploading'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1059:10)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:934:27)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\components\\__tests__\\CinePlayer.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: D:\\radiology-new\\client\\src\\components\\__tests__\\CinePlayer.test.tsx: Unexpected token, expected \",\" (13:91)\n\n    \u001b[0m \u001b[90m 11 |\u001b[39m \u001b[90m// Mock Material-UI components that might have issues in test environment\u001b[39m\n     \u001b[90m 12 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@mui/material/Slider'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m   \u001b[36mreturn\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mMockSlider\u001b[39m({ value\u001b[33m,\u001b[39m onChange\u001b[33m,\u001b[39m disabled\u001b[33m,\u001b[39m \u001b[32m'data-testid'\u001b[39m\u001b[33m:\u001b[39m testId\u001b[33m,\u001b[39m \u001b[33m...\u001b[39mprops }\u001b[33m:\u001b[39m any) {\n     \u001b[90m    |\u001b[39m                                                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 14 |\u001b[39m     \u001b[36mreturn\u001b[39m (\n     \u001b[90m 15 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33minput\u001b[39m\n     \u001b[90m 16 |\u001b[39m         type\u001b[33m=\u001b[39m\u001b[32m\"range\"\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.expect (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.parseBindingList (\u001b[22mnode_modules/@babel/parser/src/parser/lval.ts\u001b[2m:457:14)\u001b[22m\n      \u001b[2mat Parser.parseFunctionParams (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1723:24)\u001b[22m\n      \u001b[2mat Parser.parseFunction (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1683:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionOrFunctionSent (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1616:17)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1182:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseReturnStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1110:28)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:538:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\components\\DICOM\\__tests__\\CinePlayer.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\components\\DICOM\\__tests__\\CinePlayer.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (53:12):\n\n    \u001b[0m \u001b[90m 51 |\u001b[39m\n     \u001b[90m 52 |\u001b[39m   test(\u001b[32m'should render with default configuration'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mCinePlayer\u001b[39m {\u001b[33m...\u001b[39mdefaultProps} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 54 |\u001b[39m     \n     \u001b[90m 55 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTitle(\u001b[35m/play/i\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\n     \u001b[90m 56 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTitle(\u001b[35m/step backward/i\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=D:\\radiology-new\\client\\src\\components\\DICOM\\__tests__\\CinePlayer.test.tsx <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1264:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\intelligentCacheManager.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\intelligentCacheManager.test.ts: Unexpected token (10:11)\n\n    \u001b[0m \u001b[90m  8 |\u001b[39m \u001b[90m// Mock Worker for testing\u001b[39m\n     \u001b[90m  9 |\u001b[39m global\u001b[33m.\u001b[39m\u001b[33mWorker\u001b[39m \u001b[33m=\u001b[39m \u001b[36mclass\u001b[39m \u001b[33mMockWorker\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m   onmessage\u001b[33m:\u001b[39m ((event\u001b[33m:\u001b[39m \u001b[33mMessageEvent\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m) \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 11 |\u001b[39m   \n     \u001b[90m 12 |\u001b[39m   constructor(scriptURL\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[33mURL\u001b[39m) {\n     \u001b[90m 13 |\u001b[39m     \u001b[90m// Mock worker implementation\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2115:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.parseClassBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClass (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1188:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:345:25)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\imageAdjustmentControls.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\imageAdjustmentControls.test.ts: Missing semicolon. (16:24)\n\n    \u001b[0m \u001b[90m 14 |\u001b[39m\n     \u001b[90m 15 |\u001b[39m describe(\u001b[32m'ImageAdjustmentControls'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m adjustmentControls\u001b[33m:\u001b[39m \u001b[33mImageAdjustmentControls\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 17 |\u001b[39m   \u001b[36mlet\u001b[39m adjustmentEvents\u001b[33m:\u001b[39m \u001b[33mAdjustmentEvent\u001b[39m[] \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\n     \u001b[90m 18 |\u001b[39m\n     \u001b[90m 19 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\imageTransformationTools.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\imageTransformationTools.test.ts: Missing semicolon. (24:25)\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m\n     \u001b[90m 23 |\u001b[39m describe(\u001b[32m'ImageTransformationTools'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mlet\u001b[39m transformationTools\u001b[33m:\u001b[39m \u001b[33mImageTransformationTools\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m\n     \u001b[90m 26 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\errorHandler.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\errorHandler.test.ts: Missing semicolon. (23:13)\n\n    \u001b[0m \u001b[90m 21 |\u001b[39m\n     \u001b[90m 22 |\u001b[39m describe(\u001b[32m'ErrorHandler'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m   \u001b[36mlet\u001b[39m handler\u001b[33m:\u001b[39m \u001b[33mErrorHandler\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 26 |\u001b[39m     handler \u001b[33m=\u001b[39m \u001b[33mErrorHandler\u001b[39m\u001b[33m.\u001b[39mgetInstance()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\webglRenderingEngine.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\webglRenderingEngine.test.ts: Unexpected token, expected \",\" (20:22)\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   unobserve \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   disconnect \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m   constructor(callback\u001b[33m:\u001b[39m \u001b[33mResizeObserverCallback\u001b[39m) {}\n     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m\n     \u001b[90m 23 |\u001b[39m describe(\u001b[32m'WebGLRenderingEngine'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.expect (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.parseBindingList (\u001b[22mnode_modules/@babel/parser/src/parser/lval.ts\u001b[2m:457:14)\u001b[22m\n      \u001b[2mat Parser.parseFunctionParams (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1723:24)\u001b[22m\n      \u001b[2mat Parser.parseMethod (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2481:10)\u001b[22m\n      \u001b[2mat Parser.pushClassMethod (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2018:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.parseClassBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClass (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1188:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:345:25)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\performanceMonitor.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    D:\\radiology-new\\client\\src\\services\\__tests__\\performanceMonitor.test.ts:5\n    import { performanceMonitor } from '../performanceMonitor';\n    ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1728:14)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\preUploadValidator.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\preUploadValidator.test.ts: Missing semicolon. (9:58)\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'../api'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m  8 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m mockedNetworkDiagnostics \u001b[33m=\u001b[39m networkDiagnosticsService \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m networkDiagnosticsService\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m mockedApiService \u001b[33m=\u001b[39m apiService \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m apiService\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 11 |\u001b[39m\n     \u001b[90m 12 |\u001b[39m \u001b[90m// Mock File constructor\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\networkDiagnosticsService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\networkDiagnosticsService.test.ts: Missing semicolon. (6:35)\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m \u001b[90m// Mock the API service\u001b[39m\n     \u001b[90m 5 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'../api'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m \u001b[36mconst\u001b[39m mockedApiService \u001b[33m=\u001b[39m apiService \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m apiService\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m\n     \u001b[90m 8 |\u001b[39m describe(\u001b[32m'NetworkDiagnosticsService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 9 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedViewerManager.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedViewerManager.test.ts: Missing semicolon. (30:19)\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m describe(\u001b[32m'EnhancedViewerManager'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m   \u001b[36mlet\u001b[39m viewerManager\u001b[33m:\u001b[39m \u001b[33mEnhancedViewerManager\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m   \u001b[36mlet\u001b[39m mockServices\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m\n     \u001b[90m 33 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedUploadService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\enhancedUploadService.test.ts: Missing semicolon. (9:43)\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'../networkDiagnosticsService'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m  8 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m mockedPatientService \u001b[33m=\u001b[39m patientService \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m patientService\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m mockedNetworkDiagnostics \u001b[33m=\u001b[39m networkDiagnosticsService \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m networkDiagnosticsService\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 11 |\u001b[39m\n     \u001b[90m 12 |\u001b[39m \u001b[90m// Mock File constructor\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\accessibility.integration.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\accessibility.integration.test.tsx: Missing initializer in const declaration. (56:17)\n\n    \u001b[0m \u001b[90m 54 |\u001b[39m\n     \u001b[90m 55 |\u001b[39m \u001b[90m// Test wrapper component\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 56 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mTestWrapper\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m{ \n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 57 |\u001b[39m   children\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 58 |\u001b[39m   theme\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m 59 |\u001b[39m }\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ children\u001b[33m,\u001b[39m theme \u001b[33m=\u001b[39m darkTheme }) \u001b[33m=>\u001b[39m (\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\accessibility.integration.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\accessibility.integration.test.tsx: Missing initializer in const declaration. (56:17)\n\n    \u001b[0m \u001b[90m 54 |\u001b[39m\n     \u001b[90m 55 |\u001b[39m \u001b[90m// Test wrapper component\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 56 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mTestWrapper\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m{ \n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 57 |\u001b[39m   children\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 58 |\u001b[39m   theme\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m 59 |\u001b[39m }\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ children\u001b[33m,\u001b[39m theme \u001b[33m=\u001b[39m darkTheme }) \u001b[33m=>\u001b[39m (\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\components\\__tests__\\ViewerWorkflow.integration.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\components\\__tests__\\ViewerWorkflow.integration.test.tsx: Missing initializer in const declaration. (40:17)\n\n    \u001b[0m \u001b[90m 38 |\u001b[39m\n     \u001b[90m 39 |\u001b[39m \u001b[90m// Test wrapper component\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 40 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mTestWrapper\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m{ children\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m }\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ children }) \u001b[33m=>\u001b[39m (\n     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 41 |\u001b[39m   \u001b[33m<\u001b[39m\u001b[33mThemeProvider\u001b[39m theme\u001b[33m=\u001b[39m{theme}\u001b[33m>\u001b[39m\n     \u001b[90m 42 |\u001b[39m     {children}\n     \u001b[90m 43 |\u001b[39m   \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mThemeProvider\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\__tests__\\crossBrowser.integration.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\__tests__\\crossBrowser.integration.test.ts: Unexpected reserved word 'interface'. (11:0)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[90m// Mock different browser environments\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBrowserEnvironment\u001b[39m {\n     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m   name\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m   userAgent\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m\n     \u001b[90m 14 |\u001b[39m   features\u001b[33m:\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.checkReservedWord (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2886:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifierName (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2848:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifier (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2805:23)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1299:27)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\radiology-new\\client\\src\\services\\__tests__\\collaboration.integration.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\radiology-new\\client\\src\\services\\__tests__\\collaboration.integration.test.ts: Missing semicolon. (14:18)\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m describe(\u001b[32m'Collaboration Integration Tests'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mlet\u001b[39m user1Service\u001b[33m:\u001b[39m \u001b[33mStateSynchronizationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m user2Service\u001b[33m:\u001b[39m \u001b[33mStateSynchronizationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m user1StateManager\u001b[33m:\u001b[39m \u001b[33mUnifiedStateManager\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m   \u001b[36mlet\u001b[39m user2StateManager\u001b[33m:\u001b[39m \u001b[33mUnifiedStateManager\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":["src/**/*.{ts,tsx}","!src/**/*.d.ts","!src/index.tsx","!src/reportWebVitals.ts","!src/setupProxy.js","!src/**/__tests__/**","!src/**/*.test.{ts,tsx}","!src/**/*.spec.{ts,tsx}","!src/**/testUtils.ts","!src/**/__mocks__/**"],"coverageDirectory":"D:\\radiology-new\\client\\coverage-integration","coverageProvider":"babel","coverageReporters":["text","html","lcov","json-summary"],"coverageThreshold":{"global":{"branches":60,"functions":60,"lines":60,"statements":60}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"D:\\radiology-new\\client\\src\\setupIntegrationTests.global.ts","globalTeardown":"D:\\radiology-new\\client\\src\\teardownIntegrationTests.global.ts","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":false,"projects":[{"displayName":"unit","testMatch":["<rootDir>/src/**/*.test.(ts|tsx)"],"testEnvironment":"jsdom","rootDir":"D:\\radiology-new\\client"},{"displayName":"integration","testMatch":["<rootDir>/src/**/*.integration.test.(ts|tsx)"],"testEnvironment":"jsdom","testTimeout":60000,"rootDir":"D:\\radiology-new\\client"},{"displayName":"performance","testMatch":["<rootDir>/src/**/*benchmark*.test.(ts|tsx)"],"testEnvironment":"jsdom","testTimeout":120000,"setupFilesAfterEnv":["<rootDir>/src/setupPerformanceTests.ts"],"rootDir":"D:\\radiology-new\\client"}],"reporters":[["default",{}],["D:\\radiology-new\\client\\node_modules\\jest-junit\\index.js",{"outputDirectory":"<rootDir>/test-results-integration","outputName":"integration-junit.xml","suiteName":"DICOM Viewer Integration Tests","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › "}],["D:\\radiology-new\\client\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"<rootDir>/test-results-integration","filename":"integration-report.html","expand":true,"hideIcon":false,"pageTitle":"DICOM Viewer Integration Test Report","includeFailureMsg":true,"includeSuiteFailure":true}]],"rootDir":"D:\\radiology-new\\client","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testNamePattern":"100 slices","testPathPattern":"","testResultsProcessor":"D:\\radiology-new\\client\\src\\testResultsProcessor.js","testSequencer":"D:\\radiology-new\\client\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":60000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchPlugins":[{"config":{},"path":"D:\\radiology-new\\client\\node_modules\\jest-watch-typeahead\\filename.js"},{"config":{},"path":"D:\\radiology-new\\client\\node_modules\\jest-watch-typeahead\\testname.js"}],"watchman":true,"coverageLinkPath":"..\\coverage-integration\\lcov-report\\index.html"},"endTime":1758566452337,"_reporterOptions":{"publicPath":"D:\\radiology-new\\client/test-results-integration","filename":"integration-report.html","expand":true,"pageTitle":"DICOM Viewer Integration Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})